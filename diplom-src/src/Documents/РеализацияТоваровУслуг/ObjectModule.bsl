
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ВКМ_ВыполнитьАвтозаполнение() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НоменклатураАбонентскаяПлата.Значение КАК АбонентскаяПлата,
	|	ВКМ_НоменклатураРаботыСпециалиста.Значение КАК РаботыСпециалиста,
	|	РеализацияТоваровУслуг.Договор.ВКМ_СуммаАбонентскойПлаты КАК СуммаАбонентскойПлаты,
	|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот, 0) КАК КоличествоЧасовОборот,
	|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплатеОборот,
	|	РеализацияТоваровУслуг.Договор.Представление КАК Договор
	|ИЗ
	|	Константа.ВКМ_НоменклатураАбонентскаяПлата КАК ВКМ_НоменклатураАбонентскаяПлата,
	|	Константа.ВКМ_НоменклатураРаботыСпециалиста КАК ВКМ_НоменклатураРаботыСпециалиста,
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг,
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоМесяца, &КонецМесяца,, Договор В
	|		(ВЫБРАТЬ
	|			РеализацияТоваровУслуг.Договор
	|		ИЗ
	|			Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг)) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
	|ГДЕ
	|	РеализацияТоваровУслуг.Договор.ВидДоговора = &ВидДоговора
	|	И РеализацияТоваровУслуг.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.АбонентскаяПлата = Справочники.Номенклатура.ПустаяСсылка() Тогда
			ОбщегоНазначения.СообщитьПользователю("Константа Номенклатура абонентская плата не заполнена");
			Услуги.Очистить();
			Возврат;
		КонецЕсли;
		
		Если Выборка.РаботыСпециалиста = Справочники.Номенклатура.ПустаяСсылка() Тогда
			ОбщегоНазначения.СообщитьПользователю("Константа Номенклатура работы специалиста не заполнена");
			Услуги.Очистить();
			Возврат;
		КонецЕсли;
		
		Если Выборка.СуммаАбонентскойПлаты <> 0 Тогда
			Услуги.Очистить();
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Номенклатура = Выборка.АбонентскаяПлата;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.Цена = Выборка.СуммаАбонентскойПлаты;
			НоваяСтрока.Сумма = Выборка.СуммаАбонентскойПлаты;
		КонецЕсли;
		
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = Выборка.РаботыСпециалиста;
		НоваяСтрока.Количество = Выборка.КоличествоЧасовОборот;
		НоваяСтрока.Цена = Выборка.СуммаКОплатеОборот / Выборка.КоличествоЧасовОборот;
		НоваяСтрока.Сумма = Выборка.СуммаКОплатеОборот;
		
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Услуги по договору: %1 заполнены", Выборка.Договор));			
	КонецЦикла;
	
КонецПроцедуры


Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
