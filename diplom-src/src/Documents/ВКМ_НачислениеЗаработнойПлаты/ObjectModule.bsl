#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	СформироватьДвижения();
	РассчитатьОсновныеНачисления();
	РассчитатьОтпуск();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьАвтозаполнение() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ПланированиеОтпуска.Сотрудник КАК Сотрудник,
	|	ВКМ_ПланированиеОтпуска.ДатаНачала КАК ДатаНачала,
	|	ВКМ_ПланированиеОтпуска.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты КАК ВКМ_НачислениеЗаработнойПлаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ПланированиеОтпуска КАК ВКМ_ПланированиеОтпуска
	|		ПО МЕСЯЦ(ВКМ_НачислениеЗаработнойПлаты.Дата) = МЕСЯЦ(ВКМ_ПланированиеОтпуска.ДатаНачала)
	|		ИЛИ МЕСЯЦ(ВКМ_НачислениеЗаработнойПлаты.Дата) = МЕСЯЦ(ВКМ_ПланированиеОтпуска.ДатаОкончания)
	|ГДЕ
	|	(ВКМ_НачислениеЗаработнойПлаты.Ссылка = &Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Сотрудник) Тогда
			НоваяСтрока = Начисления.Добавить();
			НоваяСтрока.Сотрудник = Выборка.Сотрудник;
			НоваяСтрока.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск;
			НоваяСтрока.Удержание = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
			НоваяСтрока.ДатаНачала = Выборка.ДатаНачала;
			НоваяСтрока.ДатаОкончания = Выборка.ДатаОкончания;
			
			ОбщегоНазначения.СообщитьПользователю("Данные отпусков заполнены");
		КонецЕсли;			
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвижения()
		
	Для Каждого Строка Из Начисления Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.ПериодДействияНачало = Строка.ДатаНачала;
		Движение.ПериодДействияКонец = Строка.ДатаОкончания;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.Подразделение = Строка.Подразделение;
		Движение.ГрафикРаботы = Строка.ГрафикРаботы;
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = Строка.Удержание;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.Подразделение = Строка.Подразделение;
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Строка.Сотрудник;	
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура РассчитатьОсновныеНачисления()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК План,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
	|	И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&МоментВремени, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
	|			ИЗ
	|				РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|			ГДЕ
	|				ВКМ_ОсновныеНачисления.Регистратор = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Начислено = Выборка.Оклад / Выборка.План * Выборка.Факт;
		Движение.Результат = Начислено;
		Движение.Размер = Выборка.Оклад;
				
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Удержано = Начислено * 13 / 100;
		Движение.Результат = Удержано;
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками[Выборка.НомерСтроки - 1];
		Движение.Сумма = Начислено - Удержано;
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник,
	|	РАЗНОСТЬДАТ(ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала,
	|		ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания, День) КАК КоличествоДней,
	|	ВКМ_ОсновныеНачисления.Результат КАК Начислено,
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ПО ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник = ВКМ_ОсновныеНачисления.Сотрудник
	|		И ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = ВКМ_ОсновныеНачисления.Регистратор
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета = &Отпуск
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Оклад";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		РазмерОтпуска = Выборка.Начислено / 30 * Выборка.КоличествоДней;
		Движение.Результат = РазмерОтпуска;
		Движение.Размер = Выборка.КоличествоДней;
				
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Удержано = РазмерОтпуска * 13 / 100;
		Движение.Результат = Удержано;
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками[Выборка.НомерСтроки - 1];
		Движение.Сумма = РазмерОтпуска - Удержано;
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли